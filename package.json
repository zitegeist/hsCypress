{
  "name": "hs-frontend",
  "version": "2.0.0",
  "description": "Highsnobiety's frontpage",
  "homepage": "https://highsnobiety.com",
  "repository": "git@github.com:titel-media/hs-frontend.git",
  "main": "index.js",
  "license": "UNLICENSED",
  "private": true,
  "bugs": {
    "url": "https://hisnob.atlassian.net/projects/MT/issues",
    "email": "dev@highsnobiety.com"
  },
  "engines": {
    "node": "~10.16.0",
    "npm": "~6.9.0"
  },
  "scripts": {
    "bundlesize": "yarn bundlesize:fragments && yarn bundlesize:application",
    "bundlesize:fragments": "bundlecheck --configfile packages/hs-frontend-fragments/config/bundlecheck.config.js",
    "bundlesize:application": "bundlecheck --configfile packages/hs-frontend-application/config/bundlecheck.config.js",
    "rm:links:only": "./scripts/unlink-packages.sh",
    "rm:links": "yarn rm:links:only || yarn install --force",
    "build": "yarn clean:all && yarn build:fragments && yarn build:application",
    "build:application": "yarn build:application:all",
    "build:application:all": "env-cmd .env webpack --config packages/hs-frontend-application/config/webpack/webpack.config.all.js",
    "build:application:client": "env-cmd .env webpack --config packages/hs-frontend-application/config/webpack/webpack.config.client.js",
    "build:application:server": "env-cmd .env webpack --config packages/hs-frontend-application/config/webpack/webpack.config.server.js",
    "build:fragments": "yarn build:fragments:all",
    "build:fragments:all": "yarn clean:fragments && env-cmd .env webpack --config packages/hs-frontend-fragments/config/webpack/webpack.config.all.js",
    "build:fragments:fragments": "yarn clean:fragments && env-cmd .env webpack --config packages/hs-frontend-fragments/config/webpack/webpack.config.fragments.js",
    "build:fragments:server": "yarn clean:fragments && env-cmd .env webpack --config packages/hs-frontend-fragments/config/webpack/webpack.config.server.js",
    "build:storybook": "(cd packages/hs-frontend-magazine; build-storybook -c ./config/storybook -o ../../.out)",
    "clean": "yarn clean:all",
    "clean:all": "rimraf dist packages/*/dist",
    "clean:fragments": "rimraf dist packages/hs-frontend-fragments/dist",
    "clean:application": "rimraf dist packages/hs-frontend-application/dist",
    "clean:install": "rimraf node_modules packages/**/node_modules && yarn cache clean && yarn install",
    "clean:builds": "rimraf dist packages/*/dist",
    "generate:fragments:map": "node packages/hs-frontend-fragments/scripts/generate-fragments-map.js",
    "gen": "plop --plopfile=./config/plop/plopfile.js",
    "lint:ci": "yarn lint:css && yarn lint:js:ci",
    "lint": "yarn lint:css && yarn lint:js",
    "lint:js": "DEBUG=eslint:cli-engine esprint check",
    "lint:js:ci": "esprint check",
    "lint:css": "stylelint --config=stylelint.config.js **/*.scss",
    "schemas:staging": "node scripts/get-api-schemas staging",
    "schemas:production": "node scripts/get-api-schemas production",
    "start": "yarn clean:all && yarn start:fragments",
    "start:fragments": "yarn start:fragments:watch",
    "start:fragments:dev": "(cd packages/hs-frontend-fragments; node -r dotenv/config dist/server.js)",
    "start:fragments:prod": "(cd packages/hs-frontend-fragments; node dist/server.js)",
    "start:fragments:browsersync": "(cd packages/hs-frontend-fragments; node config/browsersync.js)",
    "start:fragments:watch": "concurrently 'yarn start:fragments:browsersync' 'yarn build:fragments --watch'",
    "start:application": "yarn start:application:watch",
    "start:application:dev": "(cd packages/hs-frontend-application; node -r dotenv/config dist/server.js)",
    "start:application:prod": "(cd packages/hs-frontend-application; node dist/server.js)",
    "start:application:browsersync": "(cd packages/hs-frontend-application; node config/browsersync.js)",
    "start:application:watch": "concurrently 'yarn start:application:browsersync' 'yarn build:application --watch'",
    "storybook": "(cd packages/hs-frontend-magazine; start-storybook -p 1337 -h high.snob -c ./config/storybook)",
    "test": "yarn test:node-version && yarn test:unit && yarn test:e2e",
    "cy:open": "env-cmd .env.test percy exec -h static.highsnobiety.com -- cypress open",
    "cy:test": "cypress run --browser chrome --config video=false --config screenshotOnRunFailure=false",
    "cy:test-edge": "cypress run --browser edge --config video=false",
    "cy:test-firefox": "cypress run --browser firefox --config video=false",
    "cy:media": "percy exec -h static.hsnb.io -- cypress run --spec 'cypress/integration/mediaSpecs/**/*'",
    "cy:ci-media": "percy exec -h static.hsnb.io -- cypress run --record --parallel --group mediaSpecs --browser chrome --spec 'cypress/integration/mediaSpecs/**/*'",
    "cy:travis": "percy exec -h static.hsnb.io -- cypress run --record --parallel --group allSpecs --browser chrome",
    "cy:circle": "percy exec -h static.hsnb.io -- cypress run --record --parallel --group circle-chrome --browser chrome",
    "cy:circle-edge": "cypress run --record --parallel --group circle-edge --browser edge",
    "cy:circle-firefox": "cypress run --record --parallel --group circle-firefox --browser firefox",
    "test:unit": "jest -c config/jest/jest.config.js",
    "test:unit:ci": "jest -c config/jest/jest.config.js --ci -w=4",
    "test:e2e": "yarn test:e2e:docker",
    "test:e2e:ci": "yarn test:e2e:docker",
    "test:e2e:selenium": "env-cmd .env.test wdio config/webdriver/e2e/wdio.config.selenium.js",
    "test:e2e:docker": "env-cmd .env.test wdio config/webdriver/e2e/wdio.config.docker.js",
    "test:integration": "yarn test:integration:docker",
    "test:integration:fragments": "yarn test:integration:fragments:docker",
    "test:integration:ci": "./scripts/test-integration-ci.sh",
    "test:integration:appium": "echo 'Not implemented' # concurrently --kill-others --kill-others-on-fail 'appium -p 4444 --log-level=info --chromedriver-executable=${CHROMEDRIVER_EXECUTABLE_PATH}' 'env-cmd .env.test wdio config/webdriver/integration/wdio.config.appium.js'",
    "test:integration:saucelabs": "echo 'Not implemented' # env-cmd .env.test wdio config/webdriver/integration/wdio.config.saucelabs.js",
    "test:integration:selenium": "env-cmd .env.test wdio config/webdriver/integration/wdio.config.selenium.js",
    "test:integration:docker": "env-cmd .env.test wdio config/webdriver/integration/wdio.config.docker.js",
    "test:integration:fragments:docker": "env-cmd .env.test wdio config/webdriver/integration/wdio.config.docker.fragments.js",
    "test:watch": "jest -c config/jest/jest.watch.js --watchAll",
    "test:mock:api": "node ./tests/integration/apiMock.js",
    "test:mock:sanitize-tapes": "grep -rl setHeader tests/integration/tapes/ | xargs sed -i 's|res.setHeader(\"access-control-allow-origin\", \".*\");|res.setHeader(\"access-control-allow-origin\", req.headers.origin);|g'",
    "test:node-version": "jest ./tests/nodeVersion.test.js",
    "create-sentry-release": "./scripts/create-sentry-release.sh",
    "remove-release-source-maps": "rm -f ./release/dist/static/*.map",
    "postinstall": "./scripts/post-install.sh"
  },
  "dependencies": {
    "@loadable/component": "^5.12.0",
    "@loadable/server": "^5.12.0",
    "@sentry/browser": "^5.5.0",
    "@sentry/node": "^5.5.0",
    "@titelmedia/hooks": "^12.0.0",
    "@titelmedia/hs-frontend-application": "file:./packages/hs-frontend-application",
    "@titelmedia/hs-frontend-config": "file:./packages/hs-frontend-config",
    "@titelmedia/hs-frontend-fragments": "file:./packages/hs-frontend-fragments",
    "@titelmedia/hs-frontend-magazine": "file:./packages/hs-frontend-magazine",
    "@titelmedia/hs-frontend-shared": "file:./packages/hs-frontend-shared",
    "@titelmedia/hs-frontend-shop": "file:./packages/hs-frontend-shop",
    "@titelmedia/node-fetch": "^3.0.1",
    "@titelmedia/react-apollo-multiple-clients": "^4.0.1",
    "@titelmedia/react-insta-stories": "^1.5.2",
    "@titelmedia/scoped-sentry-reporter": "^1.1.0",
    "@titelmedia/ui-lib-accordion": "^12.1.3",
    "@titelmedia/ui-lib-anchor": "^12.0.0",
    "@titelmedia/ui-lib-badge": "^12.1.3",
    "@titelmedia/ui-lib-button": "^12.1.3",
    "@titelmedia/ui-lib-checkbox": "^12.1.3",
    "@titelmedia/ui-lib-credit": "^12.1.3",
    "@titelmedia/ui-lib-dropdown-select": "^12.1.3",
    "@titelmedia/ui-lib-dynamic-embed": "^12.1.3",
    "@titelmedia/ui-lib-event-manager": "^12.0.0",
    "@titelmedia/ui-lib-external-video": "^12.0.0",
    "@titelmedia/ui-lib-eyebrow": "^12.1.3",
    "@titelmedia/ui-lib-form-element-message-box": "^12.1.3",
    "@titelmedia/ui-lib-fullscreen": "^12.1.3",
    "@titelmedia/ui-lib-gallery": "^12.1.3",
    "@titelmedia/ui-lib-headline": "^12.1.3",
    "@titelmedia/ui-lib-icon": "^12.0.0",
    "@titelmedia/ui-lib-image": "^12.1.3",
    "@titelmedia/ui-lib-image-block": "^12.1.3",
    "@titelmedia/ui-lib-image-grid": "^12.1.3",
    "@titelmedia/ui-lib-input": "^12.1.3",
    "@titelmedia/ui-lib-intro": "^12.1.3",
    "@titelmedia/ui-lib-loading-dots": "^12.1.3",
    "@titelmedia/ui-lib-meta": "^12.1.3",
    "@titelmedia/ui-lib-paragraph": "^12.1.3",
    "@titelmedia/ui-lib-popup": "^12.1.3",
    "@titelmedia/ui-lib-quote": "^12.1.3",
    "@titelmedia/ui-lib-radio-group": "^12.1.3",
    "@titelmedia/ui-lib-section-title": "^12.1.3",
    "@titelmedia/ui-lib-tag-button": "^12.1.3",
    "@titelmedia/ui-lib-theme": "^12.1.3",
    "@titelmedia/ui-lib-toast": "^12.0.0",
    "@titelmedia/ui-lib-toggle": "^12.1.3",
    "apollo-cache-inmemory": "^1.6.5",
    "apollo-client": "^2.6.8",
    "apollo-link": "^1.2.13",
    "apollo-link-http": "^1.5.16",
    "body-parser": "^1.19.0",
    "braintree-web": "^3.48.0",
    "classnames": "^2.2.6",
    "core-js": "^3.1.4",
    "date-fns": "^2.8.1",
    "dd-trace": "^0.13.0",
    "express": "^4.16.4",
    "fastest-validator": "^0.6.17",
    "form-data": "^2.3.3",
    "formik": "^1.5.8",
    "graphql": "^14.0.2",
    "graphql-anywhere": "^4.2.4",
    "graphql-tag": "^2.10.0",
    "helmet": "^3.18.0",
    "i18next": "^17.0.6",
    "i18next-express-middleware": "^1.4.1",
    "intersection-observer": "^0.7.0",
    "isomorphic-fetch": "^2.2.1",
    "js-cookie": "^2.2.0",
    "lodash": "^4.17.15",
    "react": "^16.12.0",
    "react-apollo": "^2.5.4",
    "react-copy-to-clipboard": "^5.0.2",
    "react-dom": "^16.12.0",
    "react-dotdotdot": "^1.3.1",
    "react-gpt": "^2.0.1",
    "react-helmet": "^5.2.0",
    "react-i18next": "^10.11.4",
    "react-intersection-observer": "^8.24.1",
    "react-load-script": "^0.0.6",
    "react-router": "^5.0.1",
    "react-router-dom": "^5.0.1",
    "react-stripe-elements": "^4.0.0",
    "react-swipeable": "^5.4.0",
    "react-swipeable-views": "^0.13.3",
    "react-transition-group": "^4.2.1",
    "serialize-javascript": "^2.1.1",
    "winston": "^3.2.1",
    "yup": "^0.27.0"
  },
  "devDependencies": {
    "@babel/core": "^7.8.4",
    "@babel/plugin-proposal-export-default-from": "^7.8.3",
    "@babel/plugin-proposal-export-namespace-from": "^7.8.3",
    "@babel/plugin-proposal-throw-expressions": "^7.8.3",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/preset-env": "^7.8.4",
    "@babel/preset-react": "^7.8.3",
    "@babel/preset-stage-2": "^7.8.3",
    "@babel/register": "^7.8.3",
    "@commercetools/api-request-builder": "^4.1.1",
    "@commercetools/sdk-client": "^1.5.10",
    "@commercetools/sdk-middleware-auth": "^4.0.10",
    "@commercetools/sdk-middleware-http": "^4.0.9",
    "@commercetools/sdk-middleware-queue": "^1.1.7",
    "@commitlint/cli": "^8.0.0",
    "@commitlint/config-conventional": "^8.0.0",
    "@jortizsao/graphql-persisted-document-loader": "^1.0.1",
    "@kossnocorp/desvg": "^0.2.0",
    "@loadable/babel-plugin": "^5.12.0",
    "@loadable/webpack-plugin": "^5.12.0",
    "@percy/cypress": "^2.3.1",
    "@storybook/addon-info": "^5.0.6",
    "@storybook/addon-knobs": "^5.0.6",
    "@storybook/addon-options": "^5.0.6",
    "@storybook/addons": "^5.0.6",
    "@storybook/react": "^5.0.6",
    "@svgr/webpack": "^4.3.3",
    "@titelmedia/eslint-config-es6": "^1.4.0",
    "appium": "^1.14.0",
    "assets-webpack-plugin": "^3.9.7",
    "autoprefixer": "^9.7.4",
    "babel-eslint": "^10.0.3",
    "babel-jest": "^24.8.0",
    "babel-loader": "^8.0.6",
    "babel-plugin-import-graphql": "^2.7.0",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-module-resolver": "^3.1.1",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "base64-inline-loader": "^1.1.1",
    "browser-sync": "^2.26.3",
    "browserslist": "^4.8.7",
    "browserslist-ga": "^0.0.10",
    "bundlecheck": "^0.2.1",
    "chance": "^1.1.4",
    "concurrently": "^4.0.1",
    "controlled-promise": "^0.2.0",
    "css-loader": "^1.0.0",
    "cypress": "4.2.0",
    "cypress-dark": "^1.7.14",
    "cypress-pipe": "^1.5.0",
    "cypress-plugin-retries": "^1.3.0",
    "dotenv": "^8.0.0",
    "env-cmd": "^8.0.2",
    "enzyme": "^3.7.0",
    "enzyme-adapter-react-16": "^1.6.0",
    "enzyme-to-json": "^3.3.5",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^6.0.0",
    "eslint-import-resolver-babel-module": "^5.1.2",
    "eslint-plugin-cypress": "^2.7.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jest": "^22.8.0",
    "eslint-plugin-jsx-a11y": "^6.1.2",
    "eslint-plugin-lodash": "^5.1.0",
    "eslint-plugin-lodash-fp": "^2.2.0-a1",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-react": "^7.14.2",
    "eslint-plugin-react-hooks": "^2.2.0",
    "esprint": "^0.5.0",
    "file-loader": "^4.0.0",
    "glob": "^7.1.6",
    "https": "^1.0.0",
    "husky": "^3.0.0",
    "identity-obj-proxy": "^3.0.0",
    "inquirer-directory": "^2.1.0",
    "inspectpack": "^4.2.1",
    "jest": "^24.8.0",
    "jest-transform-graphql": "^2.1.0",
    "mini-css-extract-plugin": "^0.8.0",
    "node-sass": "^4.9.4",
    "node-style-loader": "^0.0.1-alpha",
    "nodemon-webpack-plugin": "^4.0.3",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "plop": "^2.1.0",
    "postcss-loader": "^3.0.0",
    "prettier": "^1.14.3",
    "prettier-eslint": "^9.0.1",
    "prettier-stylelint": "^0.4.2",
    "pretty-quick": "^1.8.0",
    "prop-types": "^15.7.2",
    "react-test-renderer": "^16.12.0",
    "resolve-url-loader": "^3.1.1",
    "sass-loader": "^7.1.0",
    "stripe": "^7.4.0",
    "stylelint": "^12.0.1",
    "stylelint-config-css-modules": "^2.1.0",
    "stylelint-config-sass-guidelines": "^6.0.0",
    "stylelint-config-standard": "^19.0.0",
    "stylelint-prettier": "^1.1.2",
    "supertest": "^4.0.2",
    "terser-webpack-plugin": "^2.3.5",
    "timezone-mock": "^1.0.17",
    "url-parse": "^1.4.4",
    "waait": "^1.0.2",
    "wdio": "^3.0.3",
    "wdio-appium-service": "^0.2.3",
    "wdio-docker-service": "^1.5.0",
    "wdio-jasmine-framework": "^0.3.6",
    "wdio-sauce-service": "^0.4.14",
    "wdio-selenium-standalone-service": "^0.0.12",
    "webdriverio": "^4.14.0",
    "webpack": "^4.35.3",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.1.2",
    "webpack-node-externals": "^1.7.2",
    "webpack-stats-plugin": "^0.3.0",
    "yakbak": "^4.0.0"
  },
  "sideEffects": false,
  "resolutions": {
    "apollo-link": "^1.2.13",
    "apollo-utilities": "^1.3.3",
    "hoist-non-react-statics": "^3.3.1",
    "lodash": "^4.17.15"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
